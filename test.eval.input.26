(caar '((1))) 
(caar '((1 2) (3 4) (5 6) (7 8)))      
(cadr '((1 2) (3 4) (5 6) (7 8)))    
(cadr (quote (1 2 3))) 

(list 1 2 3)                         
(list? '()) 
(list? '(1 2 3)) 
(list? '(3 . 4)) 
(list? '(a b c)) 
(list? 3) 

(length (list 1 2 3 4)) 
(length (quote ())) 
(length (quote (1 2 3))) 

(list-ref '(0 1 2 3 4) 3)              
(list-ref (list 'a 'b 'c) 0)            
(list-ref (cons 1 2) 0)                 

(list-tail '(0 1 2 3 4) 3)             
(list-tail (list 1 2 3 4) 2)            
(list-tail (cons 1 2) 1)                  

(list-tail 'not-a-pair 0)


(member 'a '(1 2 3 a b c))             
(member 2 (list 1 2 3 4))

(member 9 (list 1 2 3 4))


(assq 'c (list (list 'a 'b) (list 'c 'd) (list 'e 'f)))

(assq 2 '((0 a) (1 b) (2 c) (3 d)))    

(append '(a b) '(c d))                 

(reverse '(1 2 3))                     
(reverse (list 1 2 3 4))

(reverse '())

(reverse '(1))


;;;(map (lambda (x) (* x x)) '(1 2 3))    
;;;(map (lambda (number)
;;;         (+ 1 number))
;;;                '(1 2 3 4))

;;;(map (lambda (number1 number2)
;;;         (+ number1 number2))
;;;                '(1 2 3 4)
;;;                       '(10 100 1000 10000))


;;;(filter odd? '(1 2 3))                

;;;(foldl cons '() '(1 2 3))              

;;;(foldr cons '() '(1 2 3))              
